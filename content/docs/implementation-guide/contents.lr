title: Implementation Guide
---
doc_category: documentation
---
body:

For background on JDX, read the **[Documentation](http://3.17.57.171:5000/docs/)**, taking a look at JDX for an overview, analysis for reasons why to use JDX, and Namespace Policy for our sustainability plans. For technical reference, see **[Specifications](http://3.17.57.171:5000/admin/root:specs/)**. 

## Participate and Contribute

This is the best time for contributions, comments, and corrections! The open source JobSchema+ assets are expected to update to incorporate pilot findings, feedback from the community, and beta testing. 

1. Please use this website to think about JobSchema+ and your organization, including potential costs and benefits of implementing. 
2. Review our proposed features for the next release below and add your comments on github issues, the [open forum](https://groups.google.com/a/brighthive.io/forum/#!forum/jdx-community), or by [emailing us](jdx@brighthive.io).
3. Going forward, we will provide an implementation guide to explain how you can use JobSchema+ to bring together an ecosystem of tools to create job descriptions and postings in JS+ format on your own.
4. If you like what you see, email us to become a JDX partner!

### Potential Features for v1.0.0
(note: these will link to github issues shortly)

* Competency metadata: allow description of whether any competency is required/preferred/etc.
* Competency metadata: allow description of whether any competency is a responsibility
* Competency metadata: allow description of whether any competency is a foundational, industry, sector, or occupational competency
* Competency metadata: allow description of level of the competency in some way
* competency metadata: if competency has been suggested, associate original competency for machine learning purposes?
* competency metadata: An employer can see Competency Framework publisher name for a suggested property, and it is stored with the competency
* include new property from JS+ full: `jobStartDate`
* A downstream analytics partner has access to the entire JD as a field within JS+ in order to see data that will otherwise be lost in the JS+ schema input process (even with `additionalProperty` enabled)
* An employer can control what fields go into a job description vs a job posting in order to have an internal and an external version. JobDescription may contain other fields like an alternative, formal job title
* find a way to store the combinations of Alternative/Equivalent/Minimum/Preferred/Required x Credential/Education/Experience without parsing, initially
* An employer can use `additionalProperty` to add another key value pair
* An employer can select multiple suggested competency statements per JD substatement when they perceive more than one competency to be present in a single substatement
* refine `occupationalCategory` and `industryCode` to contain more information about the codes they contain
* refine `specialCommitment` possibly to cover travel requirements instead
* add `applicationInstructions`
* field to contain a license

--------

The following workflow roughly describes the process of creating or updating a job description/posting using the JobSchema+ and other enabled features like: 
* competency extraction, suggestion, and matching, 
* property (field) suggestions, dropdown fields, or autocompletion, 
* scoring the completed job description/posting, 
* and distributing it to talent sourcing providers, job boards etc. at the discretion of the user.

This process can be enhanced by information provided from pooled data at a national, regional, occupational, and/or industry level. Note this workflow will come together inside existing HRIS/ATS workflow and integrating services and software from other providers.

![workflow](screen-shot-2019-10-23-at-10.09.03-pm.png)

In addition, there is a Step 0 involving any organization beginning this process for the first time. In order to collect the optional input data to fill out JobSchema+, many organizations will collaborate internally between their various roles involved in HR. Ideally, using JDX may spark intra- and inter-organizational discussion around processes including competency-based hiring, engagement, screening/interviewing, internal training, performance evaluations, and retention. At minimum, the process will benefit from the user of JDX setting aside some time to think about the JobSchema+ properties for their organization before beginning. The process itself of creating or updating a job description/posting is expected to take under an hour with the selection of competencies taking the bulk of the time but significantly reducing the time that would be needed to perform this selection manually. 

